{"version":3,"sources":["../../../api/server/middleware/checkauth.js"],"names":["app","util","Util","use","req","res","next","token","headers","authorization","send","jwt","verify","encrypText","err","decoded","setError"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAGA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAIC,gBAAJ,EAAb;AAEAF,GAAG,CAACG,GAAJ;AAAA,2FAAQ,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,YAAAA,KADA,GACQH,GAAG,CAACI,OAAJ,CAAYC,aADpB;;AAAA,gBAEDF,KAFC;AAAA;AAAA;AAAA;;AAGJN,YAAAA,IAAI,CAACS,IAAL,CAAU,GAAV,EAAe,oBAAf;AAHI,6CAIGT,IAAI,CAACS,IAAL,CAAUL,GAAV,CAJH;;AAAA;AAMNM,qCAAIC,MAAJ,CAAWL,KAAX,EAAkBM,oBAAlB,EAA8B,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC9C,kBAAID,GAAJ,EAAS;AACPb,gBAAAA,IAAI,CAACe,QAAL,CAAc,GAAd,EAAmB,uBAAnB;AACA,uBAAOf,IAAI,CAACS,IAAL,CAAUL,GAAV,CAAP;AACD;;AACDJ,cAAAA,IAAI,CAACe,QAAL,CAAc,GAAd,EAAmB,2BAAnB;AACAZ,cAAAA,GAAG,CAACW,OAAJ,GAAcA,OAAd;AACAT,cAAAA,IAAI;AACL,aARD;;AANM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import jwt from \"jsonwebtoken\"\nimport express from \"express\"\nimport bcrypt from \"bcrypt\"\nimport { encrypText } from \"../src/config/settings\"\nimport Helpers from \"../utils/Util\"\nimport Util from \"../utils/Util\"\nimport LoginRoutes from \"../routes/LoginRoutes\"\nimport router from \"../routes/LoginRoutes\"\n\nconst app = express()\nconst util = new Util()\n\napp.use(async (req, res, next) => {\n  const token = req.headers.authorization\n  if (!token) {\n    util.send(401, \"Token cannot empty\")\n    return util.send(res)\n  }\n  jwt.verify(token, encrypText, (err, decoded) => {\n    if (err) {\n      util.setError(401, \"Your Access is denied\")\n      return util.send(res)\n    }\n    util.setError(200, \"Your access is succesfull\")\n    req.decoded = decoded\n    next()\n  })\n})\n"],"file":"checkauth.js"}